//@ui5-bundle websapui5Jaca/Component-preload.js
sap.ui.require.preload({
	"websapui5Jaca/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","websapui5/model/models"],(e,t)=>{"use strict";return e.extend("websapui5.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"websapui5Jaca/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("websapui5.controller.App",{onInit(){}})});
},
	"websapui5Jaca/controller/DetailPage.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageToast","sap/m/MessageBox","websapui5/model/models"],(e,t,s,o,a)=>{"use strict";return e.extend("websapui5.controller.DetailPage",{onInit(){const e=this.getOwnerComponent().getRouter();const t=e.getRoute("RouteDetailPage");t.attachPatternMatched(this._onRouteMatched,this);const s=a.createUserInfoModel(this.getOwnerComponent());this.getView().setModel(s,"userInfo");this._loadRolesAndDepartments()},handleEmpPress(){const e=this.getOwnerComponent().getRouter();const t=this.getView().getModel("i18n").getResourceBundle();const s=this.getView().getModel("userInfo");if(s&&s.getProperty("/roles/admin")){sap.m.MessageBox.confirm(t.getText("confirmCancelMessage"),{title:t.getText("confirmCancelTitle"),actions:[sap.m.MessageBox.Action.YES,sap.m.MessageBox.Action.NO],onClose:t=>{if(t===sap.m.MessageBox.Action.YES){e.navTo("RouteListPage");this._clearForm()}}})}else{e.navTo("RouteListPage")}},handleAddPress(){const e=this.getView().getModel("i18n").getResourceBundle();const t=this.getOwnerComponent().getRouter();const s=this.getView().getModel("userInfo");if(s&&s.getProperty("/roles/admin")){sap.m.MessageBox.confirm(e.getText("confirmCancelMessage"),{title:e.getText("confirmCancelTitle"),actions:[sap.m.MessageBox.Action.YES,sap.m.MessageBox.Action.NO],onClose:e=>{if(e===sap.m.MessageBox.Action.YES){t.navTo("RouteDetailPage",{employeeId:"new"})}}})}},onSave(){const e=this.getView().getModel("employee");const t=e.getData();if(!this._validateForm(t)){return}const s=this.getView().getModel("i18n").getResourceBundle();o.confirm(s.getText("confirmSaveMessage"),{title:s.getText("confirmSaveTitle"),onClose:e=>{if(e===o.Action.OK){this._performSave(t)}}})},_performSave(e){const t=this.getOwnerComponent().getModel();const o=this.getView().getModel("i18n").getResourceBundle();const a={firstName:e.firstName,lastName:e.lastName,dateOfBirth:e.dateOfBirth,email:e.email,department_ID:e.department_ID,role_ID:e.role_ID,hireDate:this._formatDate(e.hireDate)};if(e.isEditMode&&e.ID){const n=`/Employees(${e.ID})`;const r=t.bindContext(n);r.requestObject().then(()=>{const e=r.getBoundContext();Object.keys(a).forEach(t=>{e.setProperty(t,a[t])});return t.submitBatch(t.getUpdateGroupId())}).then(()=>{s.show(o.getText("employeeUpdatedMessage"));this._clearForm();this._navigateListViewWithRefresh()}).catch(e=>{s.show(o.getText("errorUpdatingMessage"))})}else{const e=t.bindList("/Employees");try{const t=e.create(a);t.created().then(()=>{s.show(o.getText("employeeCreatedMessage"));this._clearForm();this._navigateListViewWithRefresh()}).catch(e=>{s.show(o.getText("errorCreatingMessage"))})}catch(e){s.show(o.getText("errorCreatingMessage"))}}},onEmailChange(e){const t=e.getParameter("value");const s=e.getSource();const o=this.getView().getModel("i18n").getResourceBundle();if(t===""){s.setValueState("None");s.setValueStateText("");return}const a=/^\w+[\w-+\.]*\@\w+([-\.]\w+)*\.[a-zA-Z]{2,}$/;if(a.test(t)){s.setValueState("Success");s.setValueStateText(o.getText("validEmailAddress"))}else{s.setValueState("Error");s.setValueStateText(o.getText("validationInvalidEmail"))}},onHireDateChange(e){this._calculateAndPreviewSalary()},onRoleChange(){this._calculateAndPreviewSalary()},onCancel(){this.handleEmpPress()},_validateForm(e){const t=this.getView().getModel("i18n").getResourceBundle();if(!e.firstName||!e.lastName||!e.email||!e.department_ID||!e.role_ID||!e.hireDate){s.show(t.getText("validationRequiredFields"));return false}const o=/^\w+[\w-+\.]*\@\w+([-\.]\w+)*\.[a-zA-Z]{2,}$/;if(e.email&&!o.test(e.email)){s.show(t.getText("validationInvalidEmail"));return false}return true},_navigateListView(){const e=this.getOwnerComponent().getRouter();e.navTo("RouteListPage");setTimeout(()=>{const e=this.getOwnerComponent().getModel();const t=e.bindList("/Employees");if(t){t.refresh()}},100)},_navigateListViewWithRefresh(){const e=this.getOwnerComponent().getRouter();const t=sap.ui.getCore().getEventBus();t.publish("employee","dataChanged",{});e.navTo("RouteListPage")},_onRouteMatched(e){this._refreshEmailState();const t=e.getParameter("arguments");const s=t.employeeId;if(s&&s!=="new"){this._loadEmployeeData(s)}else{const e=this.getView().getModel("select");if(e&&e.getProperty("/departments")){this._createEmpModel()}else{this._createEmpModel()}}},_createEmpModel(e=null){const s=this.getView().getModel("select");let o="";let a="";if(s){const e=s.getProperty("/departments");if(e&&e.length>0){o=e[0].key}const t=s.getProperty("/roles");if(t&&t.length>0){a=t[0].key}}var n={firstName:"",lastName:"",email:"",department_ID:o,role_ID:a,salary:0,hireDate:"",dateOfBirth:"",isEditMode:false};var r=Object.assign({},n);if(e){r={ID:e.ID,firstName:e.firstName||"",lastName:e.lastName||"",email:e.email||"",department_ID:e.department_ID||o,role_ID:e.role_ID||a,salary:e.salary||0,hireDate:e.hireDate||"",dateOfBirth:e.dateOfBirth||"",isEditMode:true}}var i=new t(r);i.setDefaultBindingMode("TwoWay");this.getView().setModel(i,"employee");if(e||r.role_ID&&r.hireDate){setTimeout(()=>{this._calculateAndPreviewSalary()},200)}return i},_refreshEmailState(){const e=this.getView().byId("emailInput");if(e){e.setValueState(sap.ui.core.ValueState.None);e.setValueStateText("")}},_loadEmployeeData(e){const t=this.getOwnerComponent().getModel();const o=`/Employees(${e})`;const a=t.bindContext(o,null,{$expand:"department,role"});a.requestObject().then(e=>{this._createEmpModel(e)}).catch(e=>{const t=this.getView().getModel("i18n").getResourceBundle();s.show(t.getText("errorLoadingEmployee"));this._createEmpModel()})},_loadRolesAndDepartments(){const e=this.getOwnerComponent().getModel();const s=new t({});this.getView().setModel(s,"select");const o=e.bindList("/Roles");o.requestContexts().then(e=>{const t=e.map(e=>e.getObject());const o=[];t.forEach(e=>{o.push({key:e.ID||e.id,text:e.name||e.Name})});s.setProperty("/roles",o);const a=this.getView().getModel("employee");if(a&&o.length>0){const e=a.getProperty("/role_ID");if(!e){a.setProperty("/role_ID",o[0].key);setTimeout(()=>{this._calculateAndPreviewSalary()},100)}}}).catch(e=>{});const a=e.bindList("/Departments");a.requestContexts().then(e=>{const t=e.map(e=>e.getObject());const o=[];t.forEach(e=>{o.push({key:e.ID||e.id,text:e.name||e.Name})});s.setProperty("/departments",o);const a=this.getView().getModel("employee");if(a&&o.length>0){const e=a.getProperty("/department_ID");if(!e){a.setProperty("/department_ID",o[0].key)}}}).catch(e=>{})},_formatDate(e){if(!e)return"";try{if(/^\d{4}-\d{2}-\d{2}$/.test(e)){return e}const t=new Date(e);if(isNaN(t.getTime())){return""}const s=t.getFullYear();const o=String(t.getMonth()+1).padStart(2,"0");const a=String(t.getDate()).padStart(2,"0");return`${s}-${o}-${a}`}catch(e){return""}},_clearForm(){this._createEmpModel()},_calculateAndPreviewSalary(){const e=this.getView().getModel("employee");if(!e){return}const t=e.getProperty("/role_ID");const s=e.getProperty("/hireDate");if(!t||!s){e.setProperty("/salary",0);return}const o=this.getOwnerComponent().getModel();const a=`/Roles(${t})`;const n=o.bindContext(a);n.requestObject().then(t=>{if(t&&t.baseSalary){const o=new Date(s);const a=new Date;const n=a.getFullYear()-o.getFullYear();const r=1e3;const i=n*r;const l=parseFloat(t.baseSalary);const c=l+i;e.setProperty("/salary",c)}}).catch(t=>{e.setProperty("/salary",0)})}})});
},
	"websapui5Jaca/controller/ListPage.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/MessageBox","sap/m/MessageToast","../model/formatter","websapui5/model/models"],(e,t,o,s,n,a,r,i)=>{"use strict";return e.extend("websapui5.controller.ListPage",{formatter:r,onInit(){this._loadRolesAndDepartments();const e=i.createUserInfoModel(this.getOwnerComponent());this.getView().setModel(e,"userInfo");if(e.attachEvent){e.attachEvent("userInfoReady",function(){console.log("userInfo (LP):",e.getData());console.log("userRole (LP):",e.getProperty("/userRole"))})}const t=sap.ui.getCore().getEventBus();t.subscribe("employee","dataChanged",this._onEmployeeDataChanged,this)},onExit(){const e=sap.ui.getCore().getEventBus();e.unsubscribe("employee","dataChanged",this._onEmployeeDataChanged,this)},_onEmployeeDataChanged(){this._refreshEmployeeData()},_refreshEmployeeData(){const e=this.byId("employeeTable");if(e){const t=e.getBinding("items");if(t){t.refresh()}}},_loadRolesAndDepartments(){const e=this.getOwnerComponent().getModel();const o=new t({filters:{department:"",level:""}});this.getView().setModel(o,"search");const s=e.bindList("/Roles");s.requestContexts().then(e=>{const t=e.map(e=>e.getObject());const s=[{key:"",text:"All"}];t.forEach(e=>{s.push({key:e.ID||e.id,text:e.name||e.Name})});o.setProperty("/roles",s)}).catch(e=>{});const n=e.bindList("/Departments");n.requestContexts().then(e=>{const t=e.map(e=>e.getObject());const s=[{key:"",text:"All"}];t.forEach(e=>{s.push({key:e.ID||e.id,text:e.name||e.Name})});o.setProperty("/departments",s)}).catch(e=>{})},onSearchChange(){const e=this.getView().getModel("search");const t=this.byId("employeeTable");const n=t.getBinding("items");const a=e.getProperty("/filters/department");const r=e.getProperty("/filters/role");const i=[];if(a){i.push(new o("department_ID",s.EQ,a))}if(r){i.push(new o("role_ID",s.EQ,r))}n.filter(i)},handleAddPress(){const e=this.getOwnerComponent().getRouter();e.navTo("RouteDetailPage",{employeeId:"new"})},handleEmpPress(){const e=this.getOwnerComponent().getRouter();e.navTo("RouteListPage")},onEditEmployee(e){const t=e.getSource().getBindingContext();const o=t.getObject();const s=this.getOwnerComponent().getRouter();s.navTo("RouteDetailPage",{employeeId:o.ID})},onRowSelect(e){var t=e.getParameter("listItem");var o=t.getBindingContext();var s=o.getObject();const n=this.getOwnerComponent().getRouter();n.navTo("RouteDetailPage",{employeeId:s.ID})},onDeleteEmployee(e){const t=e.getSource().getBindingContext();const o=t.getObject();const s=this.getView().getModel("i18n").getResourceBundle();n.confirm(s.getText("confirmDeleteMessage",[o.firstName,o.lastName]),{title:s.getText("confirmDeleteTitle"),onClose:e=>{if(e===n.Action.OK){this._deleteEmployee(t,o)}}})},_deleteEmployee(e,t){const o=this.getView().getModel("i18n").getResourceBundle();try{e.delete().then(()=>{a.show(o.getText("employeeDeletedMessage",[t.firstName,t.lastName]));this._refreshEmployeeData();const e=sap.ui.getCore().getEventBus();e.publish("employee","dataChanged",{})}).catch(e=>{a.show(o.getText("errorDeletingMessage"))})}catch(e){a.show(o.getText("errorDeletingMessage"))}}})});
},
	"websapui5Jaca/i18n/i18n.properties":'# This is the resource bundle for websapui5\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Employee Management\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=Employee Management\n\n#XTIT: List Page\nlistTitle=Employee List\ndepartment=Department\nname=Name\nemail=Email\nrole=Role\nsalary=Salary ($)\nhireDate=Working from\n\n#XTIT: Detail Page\ndetailTitle=Employee Details\nfirstName=First Name\nfirstNameInput=Enter first name\nlastName=Last Name\nlastNameInput=Enter last name\nemailInput=Enter email\ninputSalary=Salary auto calculated\nsaveButton=Save\ncancelButton=Cancel\ndob=Date of Birth\n\n\n\n#XBUT: Button texts\naddButton=Add Employee\nlistButton=Employee List\neditButton=Edit Employee\ndeleteButton=Delete Employee\nsaveButton=Save\ncancelButton=Cancel\n\n#XMSG: Message\nconfirmSaveTitle=Confirm\nconfirmSaveMessage=Do you want to submit the data?\nconfirmDeleteTitle=Confirm Deletion\nconfirmDeleteMessage=Are you sure you want to delete employee "{0} {1}"?\nemployeeCreatedMessage=Employee created successfully\nemployeeUpdatedMessage=Employee updated successfully\nemployeeDeletedMessage=Employee "{0} {1}" deleted successfully\nerrorCreatingMessage=Error creating employee\nerrorUpdatingMessage=Error updating employee\nerrorDeletingMessage=Error deleting employee\nconfirmCancelMessage=Do you want to cancel editing?\nconfirmCancelTitle=Cancel Editing\nvalidEmailAddress=Valid email address\nvalidationRequiredFields=Please fill all required fields\nvalidationInvalidEmail=Please enter a valid email address\nerrorLoadingEmployee=Error loading employee data\n\n\n',
	"websapui5Jaca/i18n/i18n_en.properties":'',
	"websapui5Jaca/i18n/i18n_en_US.properties":'',
	"websapui5Jaca/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"websapui5Jaca","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"c163b7d7-97a4-41a1-8fc8-0c65936871d4"},"dataSources":{"mainService":{"uri":"/odata/v4/EmployeeManagementService/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"websapui5.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"websapui5.view","async":true,"viewPath":"websapui5.view"},"routes":[{"name":"RouteListPage","pattern":":?query:","target":["TargetListPage"]},{"name":"RouteDetailPage","pattern":"detail/{employeeId}","target":["TargetDetailPage"]}],"targets":{"TargetListPage":{"id":"ListPage","name":"ListPage"},"TargetDetailPage":{"id":"DetailPage","name":"DetailPage"}}},"rootView":{"viewName":"websapui5.view.App","type":"XML","id":"App","async":true}}}',
	"websapui5Jaca/model/formatter.js":function(){
sap.ui.define([],function(){"use strict";return{salaryText:function(e){if(e===undefined||e===null){return"Salary is empty"}const r=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"});return r.format(parseFloat(e.replace(/,/g,"")))}}});
},
	"websapui5Jaca/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var o=new e(n);o.setDefaultBindingMode("OneWay");return o},createUserInfoModel:function(n){const o=n.getModel();const t=new e({});o.setDefaultBindingMode("OneWay");const r=o.bindContext("/userInfo");r.requestObject().then(e=>{let n=null;if(e&&e.roles){if(Array.isArray(e.roles)&&e.roles.includes("Admin")||typeof e.roles==="object"&&(e.roles.Admin===1||e.roles.Admin===true)){n="Admin"}}if(e){e.userRole=n;t.setData(e);t.fireEvent&&t.fireEvent("userInfoReady");console.log("User Info (from model):",t.getData())}});return t}}});
},
	"websapui5Jaca/view/App.view.xml":'<mvc:View controllerName="websapui5.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"websapui5Jaca/view/DetailPage.view.xml":'<mvc:View controllerName="websapui5.controller.DetailPage"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"><ScrollContainer id="detailScrollContainer" vertical="true" height="100%"><core:Fragment fragmentName="websapui5.view.fragment.Header" type="XML" /><core:Fragment fragmentName="websapui5.view.fragment.ChangePage" type="XML" /></ScrollContainer></mvc:View>',
	"websapui5Jaca/view/ListPage.view.xml":'<mvc:View controllerName="websapui5.controller.ListPage"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"><ScrollContainer id="employeeListScrollContainer" vertical="true" height="100%"><core:Fragment fragmentName="websapui5.view.fragment.Header" type="XML" /><core:Fragment fragmentName="websapui5.view.fragment.ListPage" type="XML" /></ScrollContainer></mvc:View>\n',
	"websapui5Jaca/view/fragment/ChangePage.fragment.xml":'<core:FragmentDefinition xmlns:macros="sap.fe.macros"\n    xmlns="sap.m"\n    xmlns:l="sap.ui.layout"\n    xmlns:u="sap.ui.unified"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"><VBox class="sapUiSmallMargin"><f:Form id="FormChange" editable="true"><f:toolbar><OverflowToolbar><Title text="{i18n>detailTitle}"/><ToolbarSpacer/><Button text="{i18n>saveButton}" type="Emphasized" press="onSave" visible="{= ${userInfo>/userRole} === \'Admin\' }" class="sapUiSmallMarginEnd"/><Button text="{i18n>cancelButton}" type="Emphasized" press="onCancel"/></OverflowToolbar></f:toolbar><f:layout><f:ResponsiveGridLayout labelSpanXL="4" labelSpanL="3" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="4" emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false" /></f:layout><f:formContainers><f:FormContainer><f:formElements><f:FormElement label="{i18n>firstName}"><f:fields><Input id="firstNameInput2" value="{employee>/firstName}" placeholder="{i18n>firstNameInput}" class="sapUiSmallMarginBottom" editable="{= ${userInfo>/userRole} === \'Admin\' }" /><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:fields></f:FormElement><f:FormElement label="{i18n>lastName}"><f:fields><Input id="lastNameInput2" value="{employee>/lastName}" placeholder="{i18n>lastNameInput}" class="sapUiSmallMarginBottom" editable="{= ${userInfo>/userRole} === \'Admin\' }" /><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:fields></f:FormElement><f:FormElement label="{i18n>department}"><f:fields><Select id="departmentSelect2" selectedKey="{employee>/department_ID}" items="{select>/departments}" class="sapUiSmallMarginBottom" editable="{= ${userInfo>/userRole} === \'Admin\' }"><core:Item key="{select>key}" text="{select>text}" /></Select><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:fields></f:FormElement><f:FormElement label="{i18n>role}"><f:fields><Select id="roleSelect2" selectedKey="{employee>/role_ID}" items="{select>/roles}" class="sapUiSmallMarginBottom" editable="{= ${userInfo>/userRole} === \'Admin\' }" change="onRoleChange"><core:Item key="{select>key}" text="{select>text}" /></Select><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:fields></f:FormElement></f:formElements></f:FormContainer><f:FormContainer><f:formElements><f:FormElement label=""><l:VerticalLayout><Avatar id="avatar" displaySize="M" displayShape="Circle" tooltip="Click to upload avatar (picture)" badgeIcon="sap-icon://edit" /></l:VerticalLayout></f:FormElement><f:FormElement label="{i18n>dob}"><DatePicker id="dobPicker" value="{employee>/dateOfBirth}" valueFormat="dd MMMM, yyyy" displayFormat="dd MMMM, yyyy" editable="{= ${userInfo>/userRole} === \'Admin\' }" /><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:FormElement><f:FormElement label="{i18n>hireDate}"><DatePicker id="wfromPicker" value="{employee>/hireDate}" valueFormat="dd MMMM, yyyy" displayFormat="dd MMMM, yyyy" editable="{= ${userInfo>/userRole} === \'Admin\' }" change=".onHireDateChange" class="sapUiSmallMarginBottom"/><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:FormElement><f:FormElement label="{i18n>email}"><Input id="emailInputc" value="{employee>/email}" placeholder="{i18n>emailInput}" type="Email" class="sapUiSmallMarginBottom" valueState="{form>/validation/emailState}" valueStateText="{form>/validation/emailStateText}" change="onEmailChange" editable="{= ${userInfo>/userRole} === \'Admin\' }" /><Text text="*" class="requireField" visible="{= ${userInfo>/userRole} === \'Admin\' }" /></f:FormElement><f:FormElement label="{i18n>inputSalary}"><Input id="salaryInput2" value="{employee>/salary}" type="Number" editable="false" class="sapUiSmallMarginBottom" /></f:FormElement></f:formElements></f:FormContainer></f:formContainers></f:Form></VBox></core:FragmentDefinition>',
	"websapui5Jaca/view/fragment/Header.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:tnt="sap.tnt"\n    xmlns:core="sap.ui.core"><tnt:ToolHeader id="shellLikeToolHeader" class="sapUiTinyMargin"><Image id="sapLogo" src="./image/inu.jpg" press="handleEmpPress" decorative="false" tooltip="Company Logo" width="35px" height="35px"><layoutData><OverflowToolbarLayoutData id="logoLayoutData" priority="NeverOverflow" /></layoutData></Image><Title text="{i18n>title}" wrapping="false"><layoutData><OverflowToolbarLayoutData id="titleLayoutData" priority="Disappear" /></layoutData></Title><ToolbarSpacer id="toolbarSpacer" /><Button id="addButton" text="{i18n>addButton}" press="handleAddPress" class="sapUiSmallMargin" visible="{= ${userInfo>/userRole} === \'Admin\' }" /><Button id="emplistButton" text="{i18n>listButton}" press="handleEmpPress" class="sapUiSmallMargin" /></tnt:ToolHeader></core:FragmentDefinition>',
	"websapui5Jaca/view/fragment/ListPage.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"><VBox class="sapUiSmallMargin"><Panel headerText="{i18n>listTitle}" class="sapUiResponsiveMargin" width="auto"><content><Table id="employeeTable" growing="true" growingThreshold="20" class="sapUiResponsiveMargin" width="auto" items="{\n                            path: \'/Employees\',\n                            parameters: {\n                                $expand: \'department\'\n                            },\n                            sorter: { path: \'firstName\', descending: false }\n                        }" selectionChange="onRowSelect" mode="SingleSelectMaster"><headerToolbar><Toolbar><Label text="{i18n>department}" /><Select id="departmentSearch" selectedKey="{search>/filters/department}" change="onSearchChange" items="{search>/departments}"><core:Item key="{search>key}" text="{search>text}" /></Select><Label text="{i18n>role}" /><Select id="roleSearch" selectedKey="{search>/filters/role}" change="onSearchChange" items="{search>/roles}"><core:Item key="{search>key}" text="{search>text}" /></Select></Toolbar></headerToolbar><columns><Column><Text text="{i18n>department}" /></Column><Column><Text text="{i18n>name}" /></Column><Column><Text text="{i18n>email}" /></Column><Column><Text text="{i18n>dob}" /></Column><Column><Text text="{i18n>role}" /></Column><Column><Text text="{i18n>salary}" /></Column><Column><Text text="{i18n>hireDate}" /></Column><Column width="4rem"><Text text=""/></Column><Column width="4rem"><Text text=""/></Column><Column /></columns><items><ColumnListItem vAlign="Middle" type="Active" press="onEditEmployee"><cells><Text text="{department/name}" /><Text text="{firstName} {lastName}" /><Text text="{email}" /><Text text="{dateOfBirth}" /><Text text="{role/name}" /><Text text="{hireDate}" /><Button icon="sap-icon://delete" tooltip="{i18n>deleteButton}" type="Transparent" press="onDeleteEmployee" visible="{= String(${userInfo>/userRole}) === \'Admin\'}" /><Button icon="sap-icon://navigation-right-arrow" tooltip="{i18n>editButton}" type="Transparent" press="onEditEmployee" /></cells></ColumnListItem></items></Table></content></Panel></VBox></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
